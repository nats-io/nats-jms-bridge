# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Generate wrappers to match local verison
      run: bin/build.sh wrapper
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ./message
    - name: Build Messages / Tranfrom Lib with Gradle
      run: ./gradlew clean build publishToMavenLocal -x test
      working-directory: ./message
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      working-directory: ./core
    - name: Build Core Bridge Lib with Gradle
      run: ./gradlew clean build publishToMavenLocal -x test
      working-directory: ./core
    - name: Build Bridge Admin Server with Gradle
      run: ./gradlew clean distZip
      working-directory: ./admin
    - name: Publish transform/message lib to the Maven Central Repository
      run: ./gradlew publish -x test
      working-directory: ./message
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish core lib to the Maven Central Repository
      run: ./gradlew publish -x test
      working-directory: ./core
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Publish admin spring boot app as a lib to the Maven Central Repository
      run: ./gradlew publish -x test
      working-directory: ./admin
      env:
        MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
