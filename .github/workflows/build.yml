name: GitHub Build Actions For Nats JMS Brdige

on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
  push:
    branches:
      - main
  release:
    branches:
      - main
    types: [released]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      BUILD_EVENT: ${{ github.event_name }}
      OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
      OSSRH_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
      SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
      SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Docker Set Up
      run: |
        docker network create bnet
        docker pull synadia/bridge-ibmmq:latest
        docker pull synadia/bridge-activemq:latest
        docker pull synadia/bridge-nats-server:latest
        docker pull synadia/bridge-travis-build:latest
        docker run --net bnet --name nats-server -d synadia/bridge-nats-server:latest
        docker run --net bnet --name active-mq -d synadia/bridge-activemq:latest
        docker run --net bnet --name ibm-mq -d synadia/bridge-ibmmq:latest
    - name: Run Core Build With Tests
      run: docker run --net bnet --name bridge -v $(pwd):/usr/app synadia/bridge-travis-build:latest
    - name: Generate wrappers and prepare gradle
      run: bin/build.sh wrapper_and_chmod
    - name: Build Messages Lib
      run: ./gradlew clean build publishToMavenLocal
      working-directory: ./message
    - name: Build Core Lib
      run: ./gradlew clean build publishToMavenLocal -x test
      working-directory: ./core
    - name: Build Bridge Admin Server
      run: ./gradlew clean distZip
      working-directory: ./admin
    - name: Build Examples
      run: ./gradlew clean publishToMavenLocal
      working-directory: ./examples
    - name: Build Example Transforms
      run: ./gradlew clean publishToMavenLocal
      working-directory: ./example-transforms
    - name: Cleanup
      if: ${{ always() }}
      run: |
        docker rm -f nats-server
        docker rm -f active-mq
        docker rm -f ibm-mq
        docker network remove bnet
