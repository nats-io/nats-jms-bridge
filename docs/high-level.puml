@startuml
'!includeurl https://raw.githubusercontent.com/RicardoNiepel/C4-PlantUML/master/C4_Context.puml
' uncomment the following line and comment the first to use locally
!include model/C4_Context.puml

'LAYOUT_TOP_DOWN
'LAYOUT_AS_SKETCH
'LAYOUT_WITH_LEGEND

'skinparam backgroundColor #EEEBDC
'skinparam handwritten true
'skinparam defaultFontName "Comic Sans MS"

'archimate #3C7FC0 "VPN Server" as vpn_server <<technology-device>>
'Rel_R(vpn_server, nats_bridge_admin, "Manages users, and bridges")







!include <cloudinsight/user>

title System Landscape Diagram for NATS MQ/JMS Bridge



!define ICONURL https://raw.githubusercontent.com/Roemer/plantuml-office/master/office2014
!includeurl ICONURL/Clouds/private_cloud.puml



Person(admin, "Admin", "<$user>\nCreates Users and Manages Bridges")
Person(user, "User", "<$user>\nManages Message Bridges")

cloud {
System(ngs, "NGS", "<$private_cloud>\n\nGlobal communications\n system built on NATS.io")
Enterprise_Boundary(corp_net, "Corporate Network") {
    System(nats, "NATS server", "High performance open source messaging system for cloud native applications")
    System_Ext(ibm_mq, "IBM MQ", "Queues")
    System_Ext(main_frame, "Main Frame", "main frame applications")
    System_Ext(jms_mq, "JMS Server", "ActiveMQ")

    System_Ext(prometheus, "Prometheus", "Tracks KPIs")
    System_Ext(health, "Health", "Consul, K8s or their ilk")
    System_Boundary(nginx, "NGINX Reverse HTTPS Proxy") {
        System(nats_bridge_admin, "NATS Bridge Admin", "Admin REST/Curl, Config, Health and KPIs") {
            System(nats_bridge_core, "NATS Bridge Core Lib", "Does low-level bridging of queues.")
        }
    }
}
}



Rel_R(admin, nats_bridge_admin, "Manages users, and bridges")
Rel_R(user, nats_bridge_admin, "Manages bridges")

'Rel_R(admin, health, "Handles Alerts")
'Rel_R(admin, prometheus, "Views Dashboards")

Rel(nats_bridge_core, ibm_mq, "Send/Receive messages and Request/Replies")
Rel(nats_bridge_core, jms_mq, "Send/Receive messages and Request/Replies")
Rel_U(nats_bridge_core, nats, "Send/Receive messages and Request/Replies")
Rel_U(nats_bridge_core, ngs, "Send/Receive messages and Request/Replies")
Rel_U(prometheus, nats_bridge_admin, "Scrape KPI and Metrics")
Rel(health, nats_bridge_admin, "Check Health")
Rel(ibm_mq, main_frame, " Call into main frames")



Lay_U(admin, user)

'Lay_L(nats_bridge_admin, prometheus)
'Lay_L(nats_bridge_admin, health)

@enduml